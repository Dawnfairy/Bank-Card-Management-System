{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\bankkart-react\\\\src\\\\components\\\\CardsList.js\",\n  _s = $RefreshSig$();\n// src/components/CardsList.js\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport CardItem from './CardItem';\nimport './CardsList.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CardsList = () => {\n  _s();\n  const [cards, setCards] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(false);\n  const fetchCards = async () => {\n    try {\n      // İki API çağrısını paralel olarak gerçekleştiriyoruz\n      const [creditResponse, bankResponse] = await Promise.all([axios.get('http://localhost:5283/api/creditcards/all'), axios.get('http://localhost:5283/api/bankcards/all')]);\n\n      // Her iki response'dan gelen verileri birleştiriyoruz\n      const combinedCards = [...creditResponse.data.map(card => ({\n        ...card,\n        cardType: 2\n      })),\n      // Kredi kartları için cardType 2\n      ...bankResponse.data.map(card => ({\n        ...card,\n        cardType: 1\n      })) // Banka kartları için cardType 1\n      ];\n      setCards(combinedCards);\n      setLoading(false);\n    } catch (err) {\n      console.error('Kartları çekerken hata oluştu:', err);\n      setError(true);\n      setLoading(false);\n    }\n  };\n  useEffect(() => {\n    fetchCards();\n  }, []);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Y\\xFCkleniyor...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Kartlar y\\xFCklenirken bir hata olu\\u015Ftu.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"cards-list\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Kartlar\\u0131n\\u0131z\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), cards.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Hen\\xFCz bir kart eklemediniz.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this) : cards.map(card => /*#__PURE__*/_jsxDEV(CardItem, {\n      card: card\n    }, card.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 29\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n_s(CardsList, \"JKI47t7sBDQXQnGX1NR2aAIFUoE=\");\n_c = CardsList;\nexport default CardsList;\nvar _c;\n$RefreshReg$(_c, \"CardsList\");","map":{"version":3,"names":["React","useEffect","useState","axios","CardItem","jsxDEV","_jsxDEV","CardsList","_s","cards","setCards","loading","setLoading","error","setError","fetchCards","creditResponse","bankResponse","Promise","all","get","combinedCards","data","map","card","cardType","err","console","children","fileName","_jsxFileName","lineNumber","columnNumber","className","length","id","_c","$RefreshReg$"],"sources":["C:/Users/Lenovo/bankkart-react/src/components/CardsList.js"],"sourcesContent":["// src/components/CardsList.js\r\nimport React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport CardItem from './CardItem';\r\nimport './CardsList.css';\r\n\r\nconst CardsList = () => {\r\n  const [cards, setCards] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(false);\r\n\r\n  const fetchCards = async () => {\r\n    try {\r\n      // İki API çağrısını paralel olarak gerçekleştiriyoruz\r\n      const [creditResponse, bankResponse] = await Promise.all([\r\n        axios.get('http://localhost:5283/api/creditcards/all'),\r\n        axios.get('http://localhost:5283/api/bankcards/all'),\r\n      ]);\r\n\r\n      // Her iki response'dan gelen verileri birleştiriyoruz\r\n      const combinedCards = [\r\n        ...creditResponse.data.map(card => ({ ...card, cardType: 2 })), // Kredi kartları için cardType 2\r\n        ...bankResponse.data.map(card => ({ ...card, cardType: 1 })),   // Banka kartları için cardType 1\r\n      ];\r\n\r\n      setCards(combinedCards);\r\n      setLoading(false);\r\n    } catch (err) {\r\n      console.error('Kartları çekerken hata oluştu:', err);\r\n      setError(true);\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchCards();\r\n  }, []);\r\n\r\n  if (loading) {\r\n    return <p>Yükleniyor...</p>;\r\n  }\r\n\r\n  if (error) {\r\n    return <p>Kartlar yüklenirken bir hata oluştu.</p>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"cards-list\">\r\n      <h2>Kartlarınız</h2>\r\n      {cards.length === 0 ? (\r\n        <p>Henüz bir kart eklemediniz.</p>\r\n      ) : (\r\n        cards.map((card) => <CardItem key={card.id} card={card} />)\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CardsList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}